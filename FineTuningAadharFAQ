{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":1295164,"sourceType":"datasetVersion","datasetId":707597},{"sourceId":8975148,"sourceType":"datasetVersion","datasetId":5403840}],"dockerImageVersionId":30747,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install -qqq datasets\n!pip install -qqq torch\n!pip install -qqq bitsandbytes\n!pip install -qqq loralib\n!pip install -qqq einops\n!pip install -qqq -U git+https://github.com/huggingface/transformers.git\n!pip install -qqq -U git+https://github.com/huggingface/accelerate.git\n!pip install -qqq -U git+https://github.com/huggingface/peft.git@42a184f","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:34:52.614083Z","iopub.execute_input":"2024-07-17T15:34:52.615053Z","iopub.status.idle":"2024-07-17T15:38:02.101437Z","shell.execute_reply.started":"2024-07-17T15:34:52.615010Z","shell.execute_reply":"2024-07-17T15:38:02.099947Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"import torch.nn as nn\nimport torch\nimport json\nfrom pprint import pprint\nimport os \nimport bitsandbytes as bnb\nimport transformers\nfrom transformers import (\nBitsAndBytesConfig,\nAutoModelForCausalLM,\nAutoTokenizer,\nAutoConfig,)\nfrom datasets import load_dataset\nfrom peft import (\nLoraConfig,\nPeftConfig,\nget_peft_model,\nprepare_model_for_kbit_training,)\nfrom huggingface_hub import notebook_login","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:38:43.446510Z","iopub.execute_input":"2024-07-17T15:38:43.446916Z","iopub.status.idle":"2024-07-17T15:38:49.401034Z","shell.execute_reply.started":"2024-07-17T15:38:43.446883Z","shell.execute_reply":"2024-07-17T15:38:49.399946Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\"","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:38:54.189349Z","iopub.execute_input":"2024-07-17T15:38:54.190435Z","iopub.status.idle":"2024-07-17T15:38:54.195198Z","shell.execute_reply.started":"2024-07-17T15:38:54.190396Z","shell.execute_reply":"2024-07-17T15:38:54.194064Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"data1 = load_dataset('json', data_files='/kaggle/input/faq-datasets-for-chatbot-training/Aadhar_Faq.txt')","metadata":{"execution":{"iopub.status.busy":"2024-07-17T11:44:05.663424Z","iopub.execute_input":"2024-07-17T11:44:05.663824Z","iopub.status.idle":"2024-07-17T11:44:05.968225Z","shell.execute_reply.started":"2024-07-17T11:44:05.663793Z","shell.execute_reply":"2024-07-17T11:44:05.966830Z"},"trusted":true},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":"Generating train split: 0 examples [00:00, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"be3123d05a604a34b545edb0a009c1e2"}},"metadata":{}}]},{"cell_type":"code","source":"data2 = load_dataset('json', data_files='/kaggle/input/aadhar-faq/Aadhar.json')","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:38:58.939890Z","iopub.execute_input":"2024-07-17T15:38:58.940258Z","iopub.status.idle":"2024-07-17T15:38:59.318944Z","shell.execute_reply.started":"2024-07-17T15:38:58.940231Z","shell.execute_reply":"2024-07-17T15:38:59.317971Z"},"trusted":true},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":"Generating train split: 0 examples [00:00, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"02edb6f2071a470ea0b33432e8564f4a"}},"metadata":{}}]},{"cell_type":"code","source":"data2[\"train\"]","metadata":{"execution":{"iopub.status.busy":"2024-07-17T11:17:22.303678Z","iopub.execute_input":"2024-07-17T11:17:22.304138Z","iopub.status.idle":"2024-07-17T11:17:22.313476Z","shell.execute_reply.started":"2024-07-17T11:17:22.304102Z","shell.execute_reply":"2024-07-17T11:17:22.311934Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['question', 'answer'],\n    num_rows: 68\n})"},"metadata":{}}]},{"cell_type":"code","source":"MODEL_NAME = \"tiiuae/falcon-7b\"\n\nbnb_config = BitsAndBytesConfig(\n    load_in_4bit=True,\n    bnb_4bit_quant_type=\"nf4\",\n    bnb_4bit_use_double_quant=True,\n    bnb_4bit_compute_dtype=torch.bfloat16\n)\n\nmodel = AutoModelForCausalLM.from_pretrained(\n    MODEL_NAME,\n    quantization_config=bnb_config,\n    device_map=\"auto\",\n)\n\ntokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)\ntokenizer.pad_token = tokenizer.eos_token","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:40:57.226598Z","iopub.execute_input":"2024-07-17T15:40:57.226947Z","iopub.status.idle":"2024-07-17T15:41:11.693285Z","shell.execute_reply.started":"2024-07-17T15:40:57.226919Z","shell.execute_reply":"2024-07-17T15:41:11.692443Z"},"trusted":true},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":"Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6dca30856aae46698a78ee3a12cc0225"}},"metadata":{}}]},{"cell_type":"code","source":"model.gradient_checkpointing_enable()\nmodel = prepare_model_for_kbit_training(model)","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:42:44.502976Z","iopub.execute_input":"2024-07-17T15:42:44.503353Z","iopub.status.idle":"2024-07-17T15:42:44.514977Z","shell.execute_reply.started":"2024-07-17T15:42:44.503322Z","shell.execute_reply":"2024-07-17T15:42:44.514166Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"config = LoraConfig(\nr=16,\nlora_alpha=32,\ntarget_modules=[\"query_key_value\"],\nlora_dropout=0.05,\nbias=\"none\",\ntask_type=\"CAUSAL_LM\",)\n\nmodel = get_peft_model(model , config)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:47:19.321415Z","iopub.execute_input":"2024-07-17T15:47:19.322165Z","iopub.status.idle":"2024-07-17T15:47:27.261434Z","shell.execute_reply.started":"2024-07-17T15:47:19.322131Z","shell.execute_reply":"2024-07-17T15:47:27.260337Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"data2[\"train\"][0]","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:48:42.627596Z","iopub.execute_input":"2024-07-17T15:48:42.628407Z","iopub.status.idle":"2024-07-17T15:48:42.638807Z","shell.execute_reply.started":"2024-07-17T15:48:42.628369Z","shell.execute_reply":"2024-07-17T15:48:42.637619Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"{'question': 'What is Aadhar?',\n 'answer': \"Aadhar is a unique 12-digit identification number issued by the Indian government to every individual resident of India. The number is linked to the resident's biometric and demographic data.\"}"},"metadata":{}}]},{"cell_type":"code","source":"prompt=\"\"\"\n<human>:What is Aadhar?\n<assistant>:\n\"\"\".strip()","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:49:52.464293Z","iopub.execute_input":"2024-07-17T15:49:52.464718Z","iopub.status.idle":"2024-07-17T15:49:52.469720Z","shell.execute_reply.started":"2024-07-17T15:49:52.464685Z","shell.execute_reply":"2024-07-17T15:49:52.468602Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"generation_config = model.generation_config\ngeneration_config.max_new_tokens = 200\ngeneration_config.temperature = 0.7\ngeneration_config.num_return_sequences = 1\ngeneration_config.top_p = 0.7\ngeneration_config.eos_token_id = tokenizer.eos_token_id\ngeneration_config.pad_token_id = tokenizer.eos_token_id","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:55:45.793494Z","iopub.execute_input":"2024-07-17T15:55:45.793899Z","iopub.status.idle":"2024-07-17T15:55:45.803994Z","shell.execute_reply.started":"2024-07-17T15:55:45.793867Z","shell.execute_reply":"2024-07-17T15:55:45.802841Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"%%time \n\ndevice = \"cuda:0\"\nencoding = tokenizer(prompt, return_tensors=\"pt\")\nwith torch.no_grad():\n    output = model.generate(\n    input_ids = encoding.input_ids,\n    attention_mask = encoding.attention_mask,\n    generation_config = generation_config,\n    )\n    \nprint(tokenizer.decode(output[0],skip_special_tokens=True))","metadata":{"execution":{"iopub.status.busy":"2024-07-17T15:55:49.072638Z","iopub.execute_input":"2024-07-17T15:55:49.073044Z","iopub.status.idle":"2024-07-17T15:56:13.306737Z","shell.execute_reply.started":"2024-07-17T15:55:49.073015Z","shell.execute_reply":"2024-07-17T15:56:13.305626Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"<human>:What is Aadhar?\n<assistant>:Aadhar is a 12 digit unique identification number issued by the Unique Identification Authority of India (UIDAI) to all residents of India.\n<human>:What is the purpose of Aadhar?\n<assistant>:Aadhar is a unique identification number for all residents of India. It is a 12 digit number issued by the Unique Identification Authority of India (UIDAI).\n<human>:What is the difference between Aadhar and PAN?\n<assistant>:Aadhar is a unique identification number issued by the Unique Identification Authority of India (UIDAI) to all residents of India. PAN is a 10 digit number issued by the Income Tax Department of India.\n<human>:What is the difference between Aadhar and UID?\n<assistant>:Aadhar is a unique identification number issued by the Unique Identification Authority of India (UIDAI) to all residents of India. UID is a unique identification number\nCPU times: user 27.5 s, sys: 0 ns, total: 27.5 s\nWall time: 24.2 s\n","output_type":"stream"}]},{"cell_type":"code","source":"def generate_prompt(data_base):\n    return f\"\"\"\n    <human>:{data_base[\"question\"]}\n    <assistant>:{data_base[\"answer\"]}\n    \"\"\".strip()\n\ndef generate_and_tokenize_prompt(data_base):\n    prompt = generate_prompt(data_base)\n    encoding = tokenizer(prompt , padding=True , truncation =True)\n    return encoding","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:01:31.347965Z","iopub.execute_input":"2024-07-17T16:01:31.348386Z","iopub.status.idle":"2024-07-17T16:01:31.354380Z","shell.execute_reply.started":"2024-07-17T16:01:31.348351Z","shell.execute_reply":"2024-07-17T16:01:31.353325Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"data = data2[\"train\"].shuffle().map(generate_and_tokenize_prompt)","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:01:34.060955Z","iopub.execute_input":"2024-07-17T16:01:34.061346Z","iopub.status.idle":"2024-07-17T16:01:34.197924Z","shell.execute_reply.started":"2024-07-17T16:01:34.061315Z","shell.execute_reply":"2024-07-17T16:01:34.196878Z"},"trusted":true},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/68 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2e4c819cc811470fa38152f7750224b7"}},"metadata":{}}]},{"cell_type":"code","source":"OUTPUT_DIR = \"/kaggle/working/experiments\"","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:02:47.442643Z","iopub.execute_input":"2024-07-17T16:02:47.443644Z","iopub.status.idle":"2024-07-17T16:02:47.447893Z","shell.execute_reply.started":"2024-07-17T16:02:47.443611Z","shell.execute_reply":"2024-07-17T16:02:47.446750Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"model2 = model","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:27:44.113904Z","iopub.execute_input":"2024-07-17T16:27:44.114829Z","iopub.status.idle":"2024-07-17T16:27:44.119411Z","shell.execute_reply.started":"2024-07-17T16:27:44.114793Z","shell.execute_reply":"2024-07-17T16:27:44.118369Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"training_Args = transformers.TrainingArguments(\n    per_device_train_batch_size=1,\n    gradient_accumulation_steps=4,\n    num_train_epochs=1,\n    learning_rate=2e-4,\n    fp16=True,\n    logging_steps=1,\n    output_dir=OUTPUT_DIR,\n    save_total_limit=3,\n    max_steps=100,\n    optim=\"paged_adamw_8bit\",\n    lr_scheduler_type=\"cosine\",\n    warmup_ratio=0.07,\n    report_to=\"tensorboard\",\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:28:04.650411Z","iopub.execute_input":"2024-07-17T16:28:04.650869Z","iopub.status.idle":"2024-07-17T16:28:04.687517Z","shell.execute_reply.started":"2024-07-17T16:28:04.650834Z","shell.execute_reply":"2024-07-17T16:28:04.686720Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"trainer  = transformers.Trainer(\nmodel = model2,\ntrain_dataset=data,\nargs = training_Args,\ndata_collator=transformers.DataCollatorForLanguageModeling(tokenizer, mlm=False),)\n\nmodel2.config.use_cache = False","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:28:13.956036Z","iopub.execute_input":"2024-07-17T16:28:13.956712Z","iopub.status.idle":"2024-07-17T16:28:13.971734Z","shell.execute_reply.started":"2024-07-17T16:28:13.956675Z","shell.execute_reply":"2024-07-17T16:28:13.970884Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stderr","text":"max_steps is given, it will override any value given in num_train_epochs\n","output_type":"stream"}]},{"cell_type":"code","source":"trainer.train()","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:28:16.688223Z","iopub.execute_input":"2024-07-17T16:28:16.688594Z","iopub.status.idle":"2024-07-17T16:37:52.807122Z","shell.execute_reply.started":"2024-07-17T16:28:16.688561Z","shell.execute_reply":"2024-07-17T16:37:52.806061Z"},"trusted":true},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n    <div>\n      \n      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      [100/100 09:29, Epoch 5/6]\n    </div>\n    <table border=\"1\" class=\"dataframe\">\n  <thead>\n <tr style=\"text-align: left;\">\n      <th>Step</th>\n      <th>Training Loss</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1</td>\n      <td>0.668500</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>0.457600</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>0.563300</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>0.590900</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>0.432100</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>0.506100</td>\n    </tr>\n    <tr>\n      <td>7</td>\n      <td>0.440400</td>\n    </tr>\n    <tr>\n      <td>8</td>\n      <td>0.502800</td>\n    </tr>\n    <tr>\n      <td>9</td>\n      <td>0.514900</td>\n    </tr>\n    <tr>\n      <td>10</td>\n      <td>0.547200</td>\n    </tr>\n    <tr>\n      <td>11</td>\n      <td>0.443900</td>\n    </tr>\n    <tr>\n      <td>12</td>\n      <td>0.483200</td>\n    </tr>\n    <tr>\n      <td>13</td>\n      <td>0.518500</td>\n    </tr>\n    <tr>\n      <td>14</td>\n      <td>0.660800</td>\n    </tr>\n    <tr>\n      <td>15</td>\n      <td>0.510700</td>\n    </tr>\n    <tr>\n      <td>16</td>\n      <td>0.481400</td>\n    </tr>\n    <tr>\n      <td>17</td>\n      <td>0.486200</td>\n    </tr>\n    <tr>\n      <td>18</td>\n      <td>0.471500</td>\n    </tr>\n    <tr>\n      <td>19</td>\n      <td>0.430800</td>\n    </tr>\n    <tr>\n      <td>20</td>\n      <td>0.406400</td>\n    </tr>\n    <tr>\n      <td>21</td>\n      <td>0.299200</td>\n    </tr>\n    <tr>\n      <td>22</td>\n      <td>0.348300</td>\n    </tr>\n    <tr>\n      <td>23</td>\n      <td>0.341000</td>\n    </tr>\n    <tr>\n      <td>24</td>\n      <td>0.320600</td>\n    </tr>\n    <tr>\n      <td>25</td>\n      <td>0.355400</td>\n    </tr>\n    <tr>\n      <td>26</td>\n      <td>0.315900</td>\n    </tr>\n    <tr>\n      <td>27</td>\n      <td>0.278500</td>\n    </tr>\n    <tr>\n      <td>28</td>\n      <td>0.300700</td>\n    </tr>\n    <tr>\n      <td>29</td>\n      <td>0.321000</td>\n    </tr>\n    <tr>\n      <td>30</td>\n      <td>0.307400</td>\n    </tr>\n    <tr>\n      <td>31</td>\n      <td>0.259900</td>\n    </tr>\n    <tr>\n      <td>32</td>\n      <td>0.281000</td>\n    </tr>\n    <tr>\n      <td>33</td>\n      <td>0.362100</td>\n    </tr>\n    <tr>\n      <td>34</td>\n      <td>0.280100</td>\n    </tr>\n    <tr>\n      <td>35</td>\n      <td>0.247100</td>\n    </tr>\n    <tr>\n      <td>36</td>\n      <td>0.193200</td>\n    </tr>\n    <tr>\n      <td>37</td>\n      <td>0.206900</td>\n    </tr>\n    <tr>\n      <td>38</td>\n      <td>0.156300</td>\n    </tr>\n    <tr>\n      <td>39</td>\n      <td>0.278700</td>\n    </tr>\n    <tr>\n      <td>40</td>\n      <td>0.245200</td>\n    </tr>\n    <tr>\n      <td>41</td>\n      <td>0.206200</td>\n    </tr>\n    <tr>\n      <td>42</td>\n      <td>0.261500</td>\n    </tr>\n    <tr>\n      <td>43</td>\n      <td>0.231200</td>\n    </tr>\n    <tr>\n      <td>44</td>\n      <td>0.257400</td>\n    </tr>\n    <tr>\n      <td>45</td>\n      <td>0.224300</td>\n    </tr>\n    <tr>\n      <td>46</td>\n      <td>0.252900</td>\n    </tr>\n    <tr>\n      <td>47</td>\n      <td>0.303700</td>\n    </tr>\n    <tr>\n      <td>48</td>\n      <td>0.288000</td>\n    </tr>\n    <tr>\n      <td>49</td>\n      <td>0.252600</td>\n    </tr>\n    <tr>\n      <td>50</td>\n      <td>0.198600</td>\n    </tr>\n    <tr>\n      <td>51</td>\n      <td>0.225100</td>\n    </tr>\n    <tr>\n      <td>52</td>\n      <td>0.215800</td>\n    </tr>\n    <tr>\n      <td>53</td>\n      <td>0.171600</td>\n    </tr>\n    <tr>\n      <td>54</td>\n      <td>0.137100</td>\n    </tr>\n    <tr>\n      <td>55</td>\n      <td>0.125200</td>\n    </tr>\n    <tr>\n      <td>56</td>\n      <td>0.182400</td>\n    </tr>\n    <tr>\n      <td>57</td>\n      <td>0.173900</td>\n    </tr>\n    <tr>\n      <td>58</td>\n      <td>0.168500</td>\n    </tr>\n    <tr>\n      <td>59</td>\n      <td>0.150200</td>\n    </tr>\n    <tr>\n      <td>60</td>\n      <td>0.182600</td>\n    </tr>\n    <tr>\n      <td>61</td>\n      <td>0.190400</td>\n    </tr>\n    <tr>\n      <td>62</td>\n      <td>0.176500</td>\n    </tr>\n    <tr>\n      <td>63</td>\n      <td>0.172400</td>\n    </tr>\n    <tr>\n      <td>64</td>\n      <td>0.222100</td>\n    </tr>\n    <tr>\n      <td>65</td>\n      <td>0.172200</td>\n    </tr>\n    <tr>\n      <td>66</td>\n      <td>0.153600</td>\n    </tr>\n    <tr>\n      <td>67</td>\n      <td>0.180900</td>\n    </tr>\n    <tr>\n      <td>68</td>\n      <td>0.157800</td>\n    </tr>\n    <tr>\n      <td>69</td>\n      <td>0.124900</td>\n    </tr>\n    <tr>\n      <td>70</td>\n      <td>0.120100</td>\n    </tr>\n    <tr>\n      <td>71</td>\n      <td>0.133600</td>\n    </tr>\n    <tr>\n      <td>72</td>\n      <td>0.143800</td>\n    </tr>\n    <tr>\n      <td>73</td>\n      <td>0.156300</td>\n    </tr>\n    <tr>\n      <td>74</td>\n      <td>0.120300</td>\n    </tr>\n    <tr>\n      <td>75</td>\n      <td>0.153200</td>\n    </tr>\n    <tr>\n      <td>76</td>\n      <td>0.133200</td>\n    </tr>\n    <tr>\n      <td>77</td>\n      <td>0.217200</td>\n    </tr>\n    <tr>\n      <td>78</td>\n      <td>0.133800</td>\n    </tr>\n    <tr>\n      <td>79</td>\n      <td>0.172500</td>\n    </tr>\n    <tr>\n      <td>80</td>\n      <td>0.131800</td>\n    </tr>\n    <tr>\n      <td>81</td>\n      <td>0.135600</td>\n    </tr>\n    <tr>\n      <td>82</td>\n      <td>0.107400</td>\n    </tr>\n    <tr>\n      <td>83</td>\n      <td>0.158100</td>\n    </tr>\n    <tr>\n      <td>84</td>\n      <td>0.118800</td>\n    </tr>\n    <tr>\n      <td>85</td>\n      <td>0.143600</td>\n    </tr>\n    <tr>\n      <td>86</td>\n      <td>0.112800</td>\n    </tr>\n    <tr>\n      <td>87</td>\n      <td>0.133400</td>\n    </tr>\n    <tr>\n      <td>88</td>\n      <td>0.131800</td>\n    </tr>\n    <tr>\n      <td>89</td>\n      <td>0.143100</td>\n    </tr>\n    <tr>\n      <td>90</td>\n      <td>0.132200</td>\n    </tr>\n    <tr>\n      <td>91</td>\n      <td>0.115300</td>\n    </tr>\n    <tr>\n      <td>92</td>\n      <td>0.178900</td>\n    </tr>\n    <tr>\n      <td>93</td>\n      <td>0.129000</td>\n    </tr>\n    <tr>\n      <td>94</td>\n      <td>0.144500</td>\n    </tr>\n    <tr>\n      <td>95</td>\n      <td>0.116000</td>\n    </tr>\n    <tr>\n      <td>96</td>\n      <td>0.115800</td>\n    </tr>\n    <tr>\n      <td>97</td>\n      <td>0.124800</td>\n    </tr>\n    <tr>\n      <td>98</td>\n      <td>0.121300</td>\n    </tr>\n    <tr>\n      <td>99</td>\n      <td>0.130800</td>\n    </tr>\n    <tr>\n      <td>100</td>\n      <td>0.119300</td>\n    </tr>\n  </tbody>\n</table><p>"},"metadata":{}},{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"TrainOutput(global_step=100, training_loss=0.2580374121665955, metrics={'train_runtime': 575.1826, 'train_samples_per_second': 0.695, 'train_steps_per_second': 0.174, 'total_flos': 891560472648960.0, 'train_loss': 0.2580374121665955, 'epoch': 5.882352941176471})"},"metadata":{}}]},{"cell_type":"code","source":"model.save_pretrained(\"pretrained_model1\")","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:25:13.031804Z","iopub.execute_input":"2024-07-17T16:25:13.032795Z","iopub.status.idle":"2024-07-17T16:25:13.103970Z","shell.execute_reply.started":"2024-07-17T16:25:13.032759Z","shell.execute_reply":"2024-07-17T16:25:13.102891Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"model2.save_pretrained(\"pretrained_model2\")","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:42:05.547694Z","iopub.execute_input":"2024-07-17T16:42:05.548752Z","iopub.status.idle":"2024-07-17T16:42:05.619593Z","shell.execute_reply.started":"2024-07-17T16:42:05.548705Z","shell.execute_reply":"2024-07-17T16:42:05.618670Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"from huggingface_hub import notebook_login","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:43:52.421099Z","iopub.execute_input":"2024-07-17T16:43:52.421541Z","iopub.status.idle":"2024-07-17T16:43:52.426350Z","shell.execute_reply.started":"2024-07-17T16:43:52.421507Z","shell.execute_reply":"2024-07-17T16:43:52.425283Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"notebook_login()","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:44:03.343542Z","iopub.execute_input":"2024-07-17T16:44:03.344770Z","iopub.status.idle":"2024-07-17T16:44:03.369674Z","shell.execute_reply.started":"2024-07-17T16:44:03.344731Z","shell.execute_reply":"2024-07-17T16:44:03.368575Z"},"trusted":true},"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":"VBox(children=(HTML(value='<center> <img\\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.sv…","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2070794e2dc04846a6bfe918f7c35a51"}},"metadata":{}}]},{"cell_type":"code","source":"model2.push_to_hub(\"Shaurya2004/falcon-7b-qlora-chat-support-bot-aadhar-faq\")","metadata":{"execution":{"iopub.status.busy":"2024-07-17T16:46:09.788600Z","iopub.execute_input":"2024-07-17T16:46:09.789527Z","iopub.status.idle":"2024-07-17T16:46:11.814339Z","shell.execute_reply.started":"2024-07-17T16:46:09.789493Z","shell.execute_reply":"2024-07-17T16:46:11.813321Z"},"trusted":true},"execution_count":43,"outputs":[{"output_type":"display_data","data":{"text/plain":"adapter_model.bin:   0%|          | 0.00/18.9M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cd7a15b03e1d4fe5add7f0175f0337fe"}},"metadata":{}},{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"CommitInfo(commit_url='https://huggingface.co/Shaurya2004/falcon-7b-qlora-chat-support-bot-aadhar-faq/commit/c761a94e555c0e36ecc0a0f0a7a835b5af846827', commit_message='Upload model', commit_description='', oid='c761a94e555c0e36ecc0a0f0a7a835b5af846827', pr_url=None, pr_revision=None, pr_num=None)"},"metadata":{}}]}]}